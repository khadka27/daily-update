# This workflow creates a daily journal entry in the "journals" directory
# and commits it to the main branch. It runs every day at 18:15 UTC (00:00 Nepal Time).
# The workflow is triggered by a cron schedule and can also be manually triggered.
# The workflow also runs on push to the main branch to ensure that it is working correctly.
# The workflow uses the latest version of Ubuntu as the runner and checks out the code.
# It configures the Git user with a name and email, creates a new journal entry file
# if it doesn't exist, and adds and commits the new journal file. If no new journal file
# was created, it makes an empty commit. Finally, it pushes the changes to the main branch.
# This workflow is useful for automating daily journal entries and keeping track of progress
# and tasks in a project. It can be customized to include specific tasks or focus areas
# for each day. The workflow is designed to be simple and efficient, allowing for easy
# tracking of daily progress and tasks without manual intervention.
# This workflow is designed to create a daily journal entry in the "journals" directory
# and commit it to the main branch. It runs every day at 18:15 UTC (00:00 Nepal Time).
# The workflow is triggered by a cron schedule and can also be manually triggered.
# The workflow also runs on push to the main branch to ensure that it is working correctly.
# The workflow uses the latest version of Ubuntu as the runner and checks out the code.

name: ðŸ“… Daily Commit

on:
  schedule:
    - cron: "15 18 * * *"
  workflow_dispatch:

jobs:
  commit:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Configure Git user
        run: |
          git config user.name "khadka27"
          git config user.email "abishekkhadka90@gmail.com"

      - name: Generate and commit journal entry
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          pip install requests
          cat > generate_content.py << 'EOL'
          import random
          import datetime

          def get_random_quote():
              quotes = [
                  "The best way to predict the future is to create it.",
                  "Code is like humor. When you have to explain it, it's bad.",
                  "The only way to do great work is to love what you do.",
                  "Programming isn't about what you know; it's about what you can figure out.",
                  "The most damaging phrase in the language is 'We've always done it this way.'"
              ]
              return random.choice(quotes)

          def get_random_topics():
              topics = [
                  "Web Development", "Machine Learning", "Cloud Computing",
                  "DevOps", "Mobile Development", "Data Science",
                  "Cybersecurity", "Blockchain", "UI/UX Design",
                  "API Development", "Database Management", "System Architecture"
              ]
              return random.sample(topics, 3)

          def get_random_goals():
              goals = [
                  "Implement new feature", "Refactor existing code",
                  "Write unit tests", "Update documentation",
                  "Fix bugs", "Optimize performance",
                  "Learn new technology", "Review pull requests",
                  "Plan architecture", "Deploy updates"
              ]
              return random.sample(goals, 3)

          def generate_journal_content():
              current_date = datetime.datetime.now().strftime("%Y-%m-%d")
              quote = get_random_quote()
              topics = get_random_topics()
              goals = get_random_goals()
              
              content = f"# Journal Entry: {current_date}\n\n> {quote}\n\n## Today's Focus\n{chr(10).join([f'- {topic}' for topic in topics])}\n\n## What I Learned\n- Explored new concepts in {topics[0]}\n- Improved understanding of {topics[1]}\n- Gained insights into {topics[2]}\n\n## Tomorrow's Goals\n{chr(10).join([f'- {goal}' for goal in goals])}\n\n---\n*This entry was automatically generated by GitHub Actions.*"
              return content

          if __name__ == "__main__":
              content = generate_journal_content()
              print(content)
          EOL

          CURRENT_DATE=$(date -u +'%Y-%m-%d')
          JOURNAL_DIR="journals"
          mkdir -p $JOURNAL_DIR
          JOURNAL_FILE="$JOURNAL_DIR/journal-$CURRENT_DATE.md"
          python generate_content.py > "$JOURNAL_FILE"
          git add "$JOURNAL_FILE"
          git commit -m "feat: add journal entry for $CURRENT_DATE" || git commit --allow-empty -m "chore: daily automated commit $CURRENT_DATE"

      - name: Push to main
        run: |
          git push origin main
