# This workflow creates a daily journal entry in the "journals" directory
# and commits it to the main branch. It runs every day at 18:15 UTC (00:00 Nepal Time).
# The workflow is triggered by a cron schedule and can also be manually triggered.
# The workflow also runs on push to the main branch to ensure that it is working correctly.
# The workflow uses the latest version of Ubuntu as the runner and checks out the code.
# It configures the Git user with a name and email, creates a new journal entry file
# if it doesn't exist, and adds and commits the new journal file. If no new journal file
# was created, it makes an empty commit. Finally, it pushes the changes to the main branch.
# This workflow is useful for automating daily journal entries and keeping track of progress
# and tasks in a project. It can be customized to include specific tasks or focus areas
# for each day. The workflow is designed to be simple and efficient, allowing for easy
# tracking of daily progress and tasks without manual intervention.
# This workflow is designed to create a daily journal entry in the "journals" directory
# and commit it to the main branch. It runs every day at 18:15 UTC (00:00 Nepal Time).
# The workflow is triggered by a cron schedule and can also be manually triggered.
# The workflow also runs on push to the main branch to ensure that it is working correctly.
# The workflow uses the latest version of Ubuntu as the runner and checks out the code.

name: ðŸ“… Daily Commit

# runs every day at 18:15 UTC â†’ 00:00 Nepal Time
on:
  schedule:
    - cron: '15 18 * * *'  
  # Allow manual triggering for testing
  workflow_dispatch:

jobs:
  commit:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT_TOKEN }}
          fetch-depth: 0

      - name: Configure Git user
        run: |
          git config user.name "khadka27"
          git config user.email "abishekkhadka90@gmail.com"

      - name: Update journal date
        run: |
          # Get current date in format YYYY-MM-DD
          CURRENT_DATE=$(date -u +'%Y-%m-%d')
          
          # Create a new journal entry file if it doesn't exist
          JOURNAL_DIR="journals"
          mkdir -p $JOURNAL_DIR
          JOURNAL_FILE="$JOURNAL_DIR/journal-$CURRENT_DATE.md"
          
          if [ ! -f "$JOURNAL_FILE" ]; then
            echo "# Journal Entry: $CURRENT_DATE" > "$JOURNAL_FILE"
            echo "" >> "$JOURNAL_FILE"
            echo "Daily automated journal entry created by GitHub Actions." >> "$JOURNAL_FILE"
            echo "" >> "$JOURNAL_FILE"
            echo "## Today's Focus" >> "$JOURNAL_FILE"
            echo "- Continue building and improving the project" >> "$JOURNAL_FILE"
            echo "- Review code and documentation" >> "$JOURNAL_FILE"
            echo "- Plan next features and enhancements" >> "$JOURNAL_FILE"
            echo "" >> "$JOURNAL_FILE"
            echo "## What I Learned" >> "$JOURNAL_FILE"
            echo "- Automated workflows with GitHub Actions" >> "$JOURNAL_FILE"
            echo "- Daily consistency in coding practice" >> "$JOURNAL_FILE"
            echo "" >> "$JOURNAL_FILE"
            echo "## Tomorrow's Goals" >> "$JOURNAL_FILE"
            echo "- Continue improving the project" >> "$JOURNAL_FILE"
            echo "- Add new features and functionality" >> "$JOURNAL_FILE"
            
            # Add and commit the new journal file
            git add "$JOURNAL_FILE"
            git commit -m "feat: add journal entry for $CURRENT_DATE"
          else
            # Make an empty commit if no new journal file was created
            git commit --allow-empty -m "chore: daily automated commit $CURRENT_DATE"
          fi

      - name: Push to main
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          git remote set-url origin https://x-access-token:${{ secrets.PAT_TOKEN }}@github.com/khadka27/daily-update.git
          git push origin main
